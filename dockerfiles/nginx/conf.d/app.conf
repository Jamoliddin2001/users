server {
  listen       80;
  server_name  test.task www.test.task;

  location /.well-known/acme-challenge/ {
        root /var/www/certbot;
  }

  return       301 https://test.task$request_uri;
}

server {
    listen 443 ssl;
    server_name test.task www.test.task;

    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_certificate     /etc/nginx/ssl_certs/rcs.mtm.tj.crt;
    ssl_certificate_key /etc/nginx/ssl_certs/rcs.mtm.tj.key;
    #ssl_certificate /etc/letsencrypt/live/sd.mtm.tj/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/sd.mtm.tj/privkey.pem;

    #ssl_verify_client on;
    #ssl_client_certificate /etc/nginx/ssl_certs/ca.pem;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    root /var/www/public;
    index index.php index.html;

    location / {
        #set $client_cert_fingerprint "";
        #if ($ssl_client_verify = SUCCESS) {
        #    set $client_cert_fingerprint $ssl_client_fingerprint;
        #}
        proxy_set_header X-Client-Cert-Fingerprint $http_x_client_cert_fingerprint;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-SSL $http_x_ssl;
        proxy_set_header X-SSL-Client-Verify $http_x_ssl_client_verify;
        proxy_set_header X-SSL-ClientCert-Base64 $http_x_ssl_clientcert_base64;
        proxy_set_header X-SSL-Client-Cert $http_x_ssl_client_cert;
        proxy_set_header X-SSL-Client-SHA1 $http_x_ssl_client_sha1;
        proxy_set_header X-SSL-Client-DN $http_x_ssl_client_dn;
        proxy_set_header X-SSL-Client-CN $http_x_ssl_client_cn;
        proxy_set_header X-SSL-Issuer $http_x_ssl_issuer;
        proxy_set_header X-SSL-Client-Not-Before $http_x_ssl_client_not_before;
        proxy_set_header X-SSL-Client-Not-After $http_x_ssl_client_not_after;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}
